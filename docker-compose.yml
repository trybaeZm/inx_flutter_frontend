version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: trybae_db
    environment:
      POSTGRES_DB: trybae_db
      POSTGRES_USER: trybae_user
      POSTGRES_PASSWORD: trybae_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - trybae_network

  # Redis (for caching)
  redis:
    image: redis:7-alpine
    container_name: trybae_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - trybae_network

  # FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: trybae_backend
    environment:
      DATABASE_URL: postgresql+asyncpg://trybae_user:trybae_password@db:5432/trybae_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET_KEY: your-super-secret-jwt-key-for-production
      SECRET_KEY: your-super-secret-key-for-production
      DEBUG: "false"
      HOST: 0.0.0.0
      PORT: 8000
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - trybae_network
    restart: unless-stopped

  # Nginx (for production)
  nginx:
    image: nginx:alpine
    container_name: trybae_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./web:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - trybae_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  trybae_network:
    driver: bridge 